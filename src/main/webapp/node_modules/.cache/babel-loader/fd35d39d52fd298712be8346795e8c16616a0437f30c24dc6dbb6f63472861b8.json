{"ast":null,"code":"var _jsxFileName = \"/home/ccon148/LogAnalyzer/src/main/webapp/src/components/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n  const [logFileName, setLogFileName] = useState(\"\");\n  const [logFilePath, setLogFilePath] = useState(\"\");\n  const [logFileResponse, setLogFileResponse] = useState({\n    message: \"\",\n    logFileAdded: false\n  });\n  const [addLogFileResponse, setAddLogFileResponse] = useState({\n    logFileName: \"\",\n    logFilePath: \"\"\n  });\n  const fileInputRef = useRef(null);\n  const handleLogFileName = e => {\n    setLogFileName(e.target.value);\n  };\n  const handleLogFilePath = e => {\n    setLogFilePath(e.target.value);\n  };\n  const handleFileSelect = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      setLogFileName(file.name);\n      setLogFilePath(file.name); // We can't get the full path, so we use the file name\n    }\n  };\n  const triggerFileInput = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setAddLogFileResponse({\n      logFileName: logFileName,\n      logFilePath: logFilePath\n    });\n    try {\n      const response = await fetch(\"/logFile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          addLogFileResponse\n        })\n      });\n      const data = await response.json();\n      setLogFileResponse(data);\n    } catch (error) {\n      console.error(\"Error fetching log file:\", error);\n      setLogFileResponse({\n        message: \"Error adding log file. Please try again.\",\n        logFileAdded: false\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Log File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"logFileName\",\n          children: \"Log File Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"logFileName\",\n          value: logFileName,\n          onChange: handleLogFileName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"logFilePath\",\n          children: \"Log File Path:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            id: \"logFilePath\",\n            value: logFilePath,\n            onChange: handleLogFilePath,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: triggerFileInput,\n            children: \"Select File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          style: {\n            display: \"none\"\n          },\n          onChange: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Add Log File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), logFileResponse.message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: logFileResponse.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"evoaAZVr9Y48V0wl9i1jRw/eNJw=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","MainPage","_s","logFileName","setLogFileName","logFilePath","setLogFilePath","logFileResponse","setLogFileResponse","message","logFileAdded","addLogFileResponse","setAddLogFileResponse","fileInputRef","handleLogFileName","e","target","value","handleLogFilePath","handleFileSelect","_e$target$files","file","files","name","triggerFileInput","_fileInputRef$current","current","click","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","className","type","id","onChange","required","onClick","ref","style","display","_c","$RefreshReg$"],"sources":["/home/ccon148/LogAnalyzer/src/main/webapp/src/components/MainPage.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\ninterface LogFileAddedResponse {\n  message: string;\n  logFileAdded: boolean;\n}\n\ninterface AddLogFileResponse {\n  logFileName: string;\n  logFilePath: string;\n}\n\nexport const MainPage = () => {\n  const [logFileName, setLogFileName] = useState(\"\");\n  const [logFilePath, setLogFilePath] = useState(\"\");\n  const [logFileResponse, setLogFileResponse] = useState<LogFileAddedResponse>({\n    message: \"\",\n    logFileAdded: false,\n  });\n  const [addLogFileResponse, setAddLogFileResponse] =\n    useState<AddLogFileResponse>({ logFileName: \"\", logFilePath: \"\" });\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleLogFileName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setLogFileName(e.target.value);\n  };\n\n  const handleLogFilePath = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setLogFilePath(e.target.value);\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setLogFileName(file.name);\n      setLogFilePath(file.name); // We can't get the full path, so we use the file name\n    }\n  };\n\n  const triggerFileInput = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setAddLogFileResponse({\n      logFileName: logFileName,\n      logFilePath: logFilePath,\n    });\n\n    try {\n      const response = await fetch(\"/logFile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          addLogFileResponse,\n        }),\n      });\n\n      const data: LogFileAddedResponse = await response.json();\n      setLogFileResponse(data);\n    } catch (error) {\n      console.error(\"Error fetching log file:\", error);\n      setLogFileResponse({\n        message: \"Error adding log file. Please try again.\",\n        logFileAdded: false,\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Add Log File</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"logFileName\">Log File Name:</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            id=\"logFileName\"\n            value={logFileName}\n            onChange={handleLogFileName}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"logFilePath\">Log File Path:</label>\n          <div className=\"input-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              id=\"logFilePath\"\n              value={logFilePath}\n              onChange={handleLogFilePath}\n              required\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              onClick={triggerFileInput}\n            >\n              Select File\n            </button>\n          </div>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            style={{ display: \"none\" }}\n            onChange={handleFileSelect}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Add Log File\n        </button>\n      </form>\n      {logFileResponse.message && <p>{logFileResponse.message}</p>}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}