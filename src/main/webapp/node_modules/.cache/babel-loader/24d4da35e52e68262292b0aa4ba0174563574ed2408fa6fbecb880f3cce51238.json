{"ast":null,"code":"var _jsxFileName = \"/home/ccon148/LogAnalyzer/src/main/webapp/src/components/ListLogFiles.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListLogFiles = () => {\n  _s();\n  const [allLogFiles, setAllLogFiles] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchLogFiles = async () => {\n    try {\n      const response = await fetch(\"/logFile/listLogFiles\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setAllLogFiles(data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error fetching log files:\", error);\n      setError(\"Failed to fetch log files. Please try again later.\");\n    }\n  };\n  useEffect(() => {\n    fetchLogFiles();\n  }, []);\n  useEffect(() => {\n    console.log(allLogFiles);\n  }, [allLogFiles]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Logfiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), allLogFiles.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No log files found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: allLogFiles.map(logFile => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/logfile`,\n          children: [logFile.logFileName, \" - \", logFile.logFilePath, \" -\", \" \", new Date(logFile.changed).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, logFile.logFileID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ListLogFiles, \"ZT+YjXx9p71D4/JZxCsPY749DR8=\");\n_c = ListLogFiles;\nvar _c;\n$RefreshReg$(_c, \"ListLogFiles\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","ListLogFiles","_s","allLogFiles","setAllLogFiles","error","setError","fetchLogFiles","response","fetch","method","headers","ok","Error","status","data","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","logFile","to","logFileName","logFilePath","Date","changed","toLocaleDateString","logFileID","_c","$RefreshReg$"],"sources":["/home/ccon148/LogAnalyzer/src/main/webapp/src/components/ListLogFiles.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface AllLogFiles {\n  logFileID: number;\n  logFileName: string;\n  logFilePath: string;\n  changed: string;\n}\n\nexport const ListLogFiles = () => {\n  const [allLogFiles, setAllLogFiles] = useState<AllLogFiles[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchLogFiles = async () => {\n    try {\n      const response = await fetch(\"/logFile/listLogFiles\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setAllLogFiles(data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error fetching log files:\", error);\n      setError(\"Failed to fetch log files. Please try again later.\");\n    }\n  };\n\n  useEffect(() => {\n    fetchLogFiles();\n  }, []);\n\n  useEffect(() => {\n    console.log(allLogFiles);\n  }, [allLogFiles]);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h3>Logfiles</h3>\n      {allLogFiles.length === 0 ? (\n        <p>No log files found.</p>\n      ) : (\n        <ol>\n          {allLogFiles.map((logFile) => (\n            <li key={logFile.logFileID}>\n              <Link to={`/logfile`}>\n                {logFile.logFileName} - {logFile.logFilePath} -{\" \"}\n                {new Date(logFile.changed).toLocaleDateString()}\n              </Link>\n            </li>\n          ))}\n        </ol>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}